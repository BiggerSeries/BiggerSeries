buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.0'
group = 'com.yourname.modid' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'modid'

java.toolchain.languageVersion = JavaLanguageVersion.of(16)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'official', version: "${mc_version}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('build/resources/main/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
//                workspace {
//                    source sourceSets.main
//                }
                Phosphophyllite {
                    source project(':Phosphophyllite').sourceSets.main
                }
                BiggerReactors {
                    source project(':BiggerReactors').sourceSets.main
                }
//                BiggerUtilities {
//                    source project(':BiggerUtilities').sourceSets.main
//                }
            }
//            property 'mixin.env.remapRefMap', 'true'
//            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }

//        server {
//            workingDirectory project.file('run')
//
//            mods {
////                Phosphophyllite {
////                    source project(':Phosphophyllite').sourceSets.main
////                }
////                BiggerReactors {
////                    source project(':BiggerReactors').sourceSets.main
////                }
//            }
//        }
//
//        data {
//            workingDirectory project.file('run')
//
//            args '--all', '--output', file('src/generated/resources/'), '--existing', sourceSets.main.resources.srcDirs[0]
//
//            mods {
////                Phosphophyllite {
////                    source project(':Phosphophyllite').sourceSets.main
////                }
////                BiggerReactors {
////                    source project(':BiggerReactors').sourceSets.main
////                }
//            }
//        }
    }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    // Fixes ResolutionException. See https://github.com/MinecraftForge/MinecraftForge/issues/7893.
    implementation('cpw.mods:securejarhandler') { version { strictly '0.9.45' } }

//    runtime fg.deobf("org.squiddev:cc-tweaked-${cc_mc_version}:${cc_version}")

//    runtime fg.deobf('curse.maven:tita-287342:3346366')
//    runtime fg.deobf('curse.maven:ifag-266515:3386008')
//    runtime fg.deobf('curse.maven:patc-306770:3374063')

//    runtime fg.deobf('curse.maven:jei-238222:3109181')
//    runtime fg.deobf('curse.maven:blame-406201:3181314')
//    runtime fg.deobf('curse.maven:constructionwands-399558:3103815')
//    runtime fg.deobf('curse.maven:compactmachines-224218:3229196')
//    runtime fg.deobf('curse.maven:allthemodium-364466:3183391')
//    runtime fg.deobf('curse.maven:bloodmagic-224791:3132991')

//    runtime fg.deobf('curse.maven:astral-241721:3118119')
//    runtime fg.deobf('curse.maven:curios-309927:3122651')
//    runtime fg.deobf('curse.maven:observerlib-316833:3123187')

//    runtime fg.deobf('curse.maven:cofhcore-69162:3099194')
//    runtime fg.deobf('curse.maven:thermalfoundation-222880:3099202')
//    runtime fg.deobf('curse.maven:thermalexpansion-69163:3099261')

//    runtime fg.deobf('curse.maven:mek-268560:3134211')
//    runtime fg.deobf('curse.maven:mek-tool-268567:3134214')
//    runtime fg.deobf('curse.maven:mek-gen-268566:3134213')

//    compile fg.deobf('curse.maven:er2-250277:3211479')
//    compile fg.deobf('curse.maven:zc2-247921:3211476')

    compileOnly project(':Phosphophyllite')
    compileOnly project(':BiggerReactors')
//    implementation project(':BiggerUtilities')
}